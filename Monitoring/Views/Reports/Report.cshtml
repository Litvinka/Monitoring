@model IEnumerable<Monitoring.Models.education__institution>
@{
    if (ViewBag.type == 1) { ViewBag.Title="Учреждения высшего образования подведомственные Министерству образования"; }
    else if (ViewBag.type == 2) { ViewBag.Title="Организации, подчиненные МО (кроме ВУЗ и управлений/отделов образования)"; }
    else if (ViewBag.type == 3) { ViewBag.Title="Областные управления образования и отделы по образованию районов"; }
    else if (ViewBag.type == 4) { ViewBag.Title = "Все сайты"; }
}

<div class="container" style="margin-top: 50px;">

    <a href="/Reports/Index">Вернуться к отчетам</a>
    <h4>Процент несоответствия Интернет-сайтов требованиям нормативно-правовых актов: <br/>
    @ViewBag.Title
    </h4>

    <table>
        <thead>
            <tr>
                <th rowspan="2">Всего интернет-сайтов</th>
                <th rowspan="2">из них проверено</th>
                <th colspan="6">из них:</th>
                <th rowspan="2">число непровереных сайтов</th>
                <th rowspan="2">% от общего количества</th>
            </tr>
            <tr>
                <th><=20% ошибок</th>
                <th>% от общего количества</th>
                <th>20% - 70% ошибок</th>
                <th>% от общего количества</th>
                <th>>=70% ошибок</th>
                <th>% от общего количества</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Model.Count()</td>
                <td>@Model.Count(p=>p.audit_object.Rating.Count(s=>s.monitoring_id==ViewBag.monitoring)>0)</td>
                <td>@Model.Count(p=> p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && (p.audit_object.site_experts.First().Experts_comments.Count(s=>s.answer==0)<= 22))</td>
                <td>@Math.Round((Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && (p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) <= 22)) * (double)100) / Model.Count(),2) %</td>
                <td>@Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0)>22 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) < 78)</td>
                <td>@Math.Round((Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) > 22 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) < 78) * (double)100) / Model.Count(), 2) %</td>
                <td>@Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) >= 78)</td>
                <td>@Math.Round((Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) >= 78) * (double)100) / Model.Count(),2) %</td>
                <td>@Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) == 0)</td>
                <td>@Math.Round((Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) == 0) * (double)100)/Model.Count(),2) %</td>
            </tr>
        </tbody>
    </table>
    <div class="col-md-6">
        <canvas id="graphic" width="400" height="400"></canvas>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.js"></script>
<script>
    var ctx = document.getElementById("graphic").getContext('2d');
var myChart = new Chart(ctx, {
    type: 'pie',
    data: {
        labels: ["<=20% ошибок", "20% - 70% ошибок", ">=70% ошибок", "% непровереных сайтов"],
        datasets: [{
            label: '# of Votes',
            data: [@Math.Round((Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && (p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) <= 22)) * (double)100) / Model.Count(),0),
                @Math.Round((Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) > 22 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) < 78) * (double)100) / Model.Count(), 0),
                @Math.Round((Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) > 0 && p.audit_object.site_experts.First().Experts_comments.Count(s => s.answer == 0) >= 78) * (double)100) / Model.Count(), 0),
                @Math.Round((Model.Count(p => p.audit_object.Rating.Count(s => s.monitoring_id == ViewBag.monitoring) == 0) * (double)100) / Model.Count(), 0)],
            backgroundColor: [
                'rgba(75, 192, 192, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(255, 99, 132, 0.2)',
                'rgb(211, 211, 211, 0.2)',
            ],
            borderColor: [
                'rgba(75, 192, 192, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(255,99,132,1)',  
                'rgb(211, 211, 211, 0.2)',
            ],
            borderWidth: 1
        }]
    },
});
</script>