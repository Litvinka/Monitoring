@model Monitoring.Models.IndexViewModel
@using Monitoring.Models

@{
    ViewBag.Title = "Отзывы";
}

<div class="container" style="margin-top: 50px;">
    <div class="row col-12">
        <aside class="col-3 round-div">
            <h4>Фильтр</h4>
            <div class="search-container">
                <form action="/Curator/Reviews">
                    <input type="text" placeholder="Поиск.." name="word" @if(Request.QueryString["word"]!=null && !Request.QueryString["word"].Equals("")) { Write("value = "+Request.QueryString["word"]);}  class="form-control">
                    <button type="submit" class="btn btn-primary">Поиск</button>
                </form>
            </div>
            <form action="/Curator/Reviews">
                <div class="type-rw-aside">
                    <h5>Тип отзыва</h5>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" value="2" name="type" @if(Request.QueryString["type"]!=null && Request["type"].Contains("2")) { Write("checked"); } id="type-thanks">
                        <label class="form-check-label" for="type-thanks">Благодарность</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="type" @if(Request.QueryString["type"]!=null && Request["type"].Contains("4")) { Write("checked"); } value="4" id="type-sentence">
                        <label class="form-check-label" for="type-sentence">Предложение</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="type" value="1" @if(Request.QueryString["type"]!=null && Request["type"].Contains("1")) { Write("checked"); } id="type-question">
                        <label class="form-check-label" for="type-question">Вопрос</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" value="3" name="type" @if(Request.QueryString["type"]!=null && Request["type"].Contains("3")) { Write("checked"); } id="type-error">
                        <label class="form-check-label" for="type-error">Ошибка</label>
                    </div>
                </div>
                <div class="type-rw-aside">
                    <h5>Ответы</h5>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="answer" value="1" @if(Request.QueryString["answer"] !=null && Request["answer"].Contains("1")) { Write("checked"); } id="type-answer">
                        <label class="form-check-label" for="type-answer">Отвечено</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="answer" value="2" @if(Request.QueryString["answer"] !=null && Request["answer"].Contains("2")) { Write("checked"); } id="type-notanswer">
                        <label class="form-check-label" for="type-notanswer">Без ответа</label>
                    </div>
                </div>
                <div class="button-aside">
                    <button class="btn btn-primary">Фильтр</button>
                </div>
            </form>
        </aside>

        <div class="col-md-9 cur-reviews">

            @foreach (var item in Model.reviews)
            {
            <div class="review round-div">
                <div class="row d-flex justify-content-between">
                    <div class="time d-flex align-items-center">
                        <img src="~/Content/img/icons/clock.svg" class="icon">
                        <p>@Html.DisplayFor(modelItem => item.date_create)</p>
                    </div>
                    <div class="d-flex">
                        <div class="answer-icon d-flex align-items-center">
                            <img class="icon" src="~/Content/img/icons/chat.svg">
                            <p>@if (item.curator_answer != null) { Write("Отвечено"); } else{ Write("Без ответа"); }</p>
                        </div>
                        <div class="@if (item.type_reviews.id == 1) { Write("review-type yellow-rw"); }
            else if (item.type_reviews.id == 2) { Write("review-type green-rw"); }
                  @if (item.type_reviews.id == 3) { Write("review-type red-rw"); }
                   @if (item.type_reviews.id == 4) { Write("review-type blue-rw"); }">
                            <span class="type-rw"></span>
                            @Html.DisplayFor(modelItem => item.type_reviews.name)
                        </div>
                    </div>
                </div>
                <div class="row author-rw">
                    <h5>@Html.DisplayFor(modelItem => item.author_name)</h5>
                </div>
                <div class="row text-rw">
                    <p>
                        @Html.DisplayFor(modelItem => item.text)
                    </p>
                </div>
                <div class="row button-cover d-flex justify-content-end align-items-center">
                    <a href="@Url.Action("OneReview","Curator",new { id=item.id })" class="btn btn-primary">Просмотреть</a>
                </div>
            </div>
            }
            <div class="btn-group pagination">
                @Html.PageLinks(Model.PageInfo, x => Url.Action("Reviews", "Curator", new { page = x }))
            </div>
        </div>
    </div>
</div>


