@model Monitoring.Models.IndexViewModel
@using Monitoring.Models

@{
    ViewBag.Title = "Отзывы";
}



<div class="container" style="margin-top: 50px;">

    <div class="row col-12">
        <aside class="col-3 round-div">
            <h4>Отзывы</h4>
            <ul class="navbar-nav mr-auto left_nav">
                <li class="nav-item @if (Request.QueryString["type"]==null || Convert.ToInt32(Request.QueryString["type"]) == 1) { Write("active"); } ">
                    <a class="nav-link" href="@Url.Action("Index","Reviews",new { type=1 })">Ожидают проверки</a>
                </li>
                <li class="nav-item @if (Convert.ToInt32(Request.QueryString["type"]) == 2) { Write("active"); } ">
                    <a class="nav-link" href="@Url.Action("Index","Reviews",new { type=2 })">Опубликованные</a>
                </li>
            </ul>
        </aside>

        <div class="col-md-9">

            @foreach (var item in Model.reviews)
            {
                <div class="review round-div">
                    <div class="row d-flex justify-content-between">
                        <div class="time d-flex align-items-center">
                            <img src="~/Content/img/icons/clock.svg" class="icon">
                            <p>@Html.DisplayFor(modelItem => item.date_create)</p>
                        </div>
                        <div class="review-type @if (item.type_reviews.id == 1) { Write("yellow-rw"); }
            else if (item.type_reviews.id == 2) { Write("green-rw"); }
                  @if (item.type_reviews.id == 3) { Write("red-rw"); }
                   @if (item.type_reviews.id == 4) { Write("blue-rw"); }">
                            <span class="type-rw"></span>
                            @Html.DisplayFor(modelItem => item.type_reviews.name)
                        </div>
                    </div>
                    <div class="row author-rw">
                        <h5>@Html.DisplayFor(modelItem => item.author_name)</h5>
                    </div>
                    <div class="row text-rw">
                        <p>
                            @Html.DisplayFor(modelItem => item.text)
                        </p>

                    </div>
                    <div class="row button-cover d-flex justify-content-end">
                        <a href="@Url.Action("Details", "Reviews", new {id=item.id })" class="btn btn-primary">Просмотреть</a>
                    </div>
                </div>
            }
            <div class="btn-group pagination">
                @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", "Reviews", new { page = x, type=Request.QueryString["type"] }))
            </div>
        </div>
    </div>
</div>